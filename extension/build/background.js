// Generated by CoffeeScript 1.6.3
(function() {
  var _mp;

  chrome.extension.onMessage.addListener(function(message, sender, sendResponse) {
    if (message.method === 'postSong') {
      return _mp.req('http://localhost:3000/api/song', function() {}, "POST", {
        access_token: 'ysqXKXIFlSRBQHudHadfZPTHuQafDypd',
        post: {
          search: unescape(message.data.search)
        }
      });
    }
  });

  _mp = _mp || {};

  _mp.req = function(url, callbackFunction, requestType) {
    var data, req;
    this.bindFunction = function(caller, object) {
      return function() {
        return caller.apply(object, [object]);
      };
    };
    this.stateChange = function(object) {
      if (this.request.readyState === 4) {
        return this.callbackFunction(this.request.responseText, this.request.status);
      }
    };
    this.getRequest = function() {
      if (window.ActiveXObjec) {
        return new ActiveXObject('Microsoft.XMLHTTP');
      } else if (window.XMLHttpRequest) {
        return new XMLHttpRequest();
      } else {
        return false;
      }
    };
    data = arguments[3] || "";
    this.postBody = JSON.stringify(data);
    this.callbackFunction = callbackFunction;
    url = url;
    this.url = url;
    this.request = this.getRequest();
    if (this.request) {
      req = this.request;
      req.onreadystatechange = this.bindFunction(this.stateChange, this);
      if (this.postBody !== "") {
        req.open(requestType, url, true);
        req.setRequestHeader('Content-type', 'application/json');
      } else {
        req.open("GET", url, true);
      }
      return req.send(this.postBody);
    }
  };

}).call(this);
